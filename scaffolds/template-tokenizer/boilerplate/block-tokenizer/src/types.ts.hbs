import type {
  BlockTokenizerMatchPhaseState,
  BlockTokenizerPostMatchPhaseState,
  PhrasingContentLine,
  YastBlockNode,
} from '@yozora/tokenizercore-block'


/**
 * typeof {{{pascalCase tokenizerName}}}
 */
export const {{{pascalCase tokenizerName}}}Type = '{{{constantCase tokenizerName}}}'
// eslint-disable-next-line @typescript-eslint/no-redeclare
export type {{{pascalCase tokenizerName}}}Type = typeof {{{pascalCase tokenizerName}}}Type


/**
 *
 * @example
 *    ````markdown
 *    ````
 *    ===>
 *    ```js
 *    ```
 */
export interface {{{pascalCase tokenizerName}}} extends YastBlockNode<{{{pascalCase tokenizerName}}}Type> {

}


/**
 * State on match phase of {{{pascalCase tokenizerName}}}Tokenizer
 */
export type {{{pascalCase tokenizerName}}}MatchPhaseState =
  & BlockTokenizerMatchPhaseState<{{{pascalCase tokenizerName}}}Type>
  & {{{pascalCase tokenizerName}}}MatchPhaseStateData


/**
 * State on post-match phase of {{{pascalCase tokenizerName}}}Tokenizer
 */
export type {{{pascalCase tokenizerName}}}PostMatchPhaseState =
  & BlockTokenizerPostMatchPhaseState<{{{pascalCase tokenizerName}}}Type>
  & {{{pascalCase tokenizerName}}}MatchPhaseStateData


/**
 * State data on match phase of {{{pascalCase tokenizerName}}}Tokenizer
 */
export interface {{{pascalCase tokenizerName}}}MatchPhaseStateData {
  /**
   * Contents
   */
  lines: PhrasingContentLine[]
}
